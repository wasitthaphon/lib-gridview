{"version":3,"file":"gridview.mjs","sources":["../../../projects/gridview/src/lib/gridview.service.ts","../../../projects/gridview/src/lib/gridview.component.ts","../../../projects/gridview/src/public-api.ts","../../../projects/gridview/src/gridview.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GridviewService {\n\n  constructor() { }\n}\n","import { Component, Input, OnInit } from '@angular/core';\nimport { NgIf, NgFor, CommonModule, DatePipe, DecimalPipe } from '@angular/common';\nimport { Observable } from 'rxjs/internal/Observable';\nimport { BehaviorSubject } from 'rxjs';\n\n@Component({\n  selector: 'lib-gridview',\n  template: `\n    <div  *ngIf=\"loading; else table\">\n      <span class=\"spinner-border\"></span>\n      <h6>Generating table, please wait.</h6>\n    </div>\n    <ng-template #table>\n      <table class=\"table table-bordered table-hover\">\n        <thead class=\"table-primary\">\n          <tr>\n            <ng-container *ngFor=\"let col of keys | async\">\n              <th *ngIf=\"!isFieldExcluded(col)\">\n                {{col}}\n              </th>\n            </ng-container>         \n          </tr>\n        </thead>\n      \n        <tbody>\n          <tr *ngFor=\"let row of data | async\">\n            <ng-container *ngFor=\"let col of keys | async\">\n              <td *ngIf=\"!isFieldExcluded(col)\" [class]=\"{\n              'text-right': isNumberField(col) \n              }\">\n                {{isNumberField(col) ? (row[col] | number): row[col] }}\n              </td>\n            </ng-container>\n          </tr>\n        </tbody>\n      </table>\n    </ng-template>\n  `,\n  styleUrls: [\n    './gridview.component.css'\n  ],\n  standalone: true,\n  imports: [NgIf, NgFor, CommonModule],\n  providers: [DatePipe, DecimalPipe]\n})\nexport class GridviewComponent implements OnInit {\n  @Input('dataTable') data: Observable<any[]> | undefined;\n  @Input('numberFields') numberFields: string[] = [];\n  @Input('dateFields') dateFields: string[] = [];\n  @Input('excludedFields') excludeFields: string[] = [];\n\n  keys: BehaviorSubject<string[]> = new BehaviorSubject<string[]>([]);\n  loading: boolean = false;\n  constructor() {\n\n  }\n\n\n  ngOnInit(): void {\n    if (this.data != undefined) {\n      this.loading = true;\n      this.data?.subscribe({\n        next: (res) => {\n          this.keys.next(Object.keys(res[0]))\n          this.loading = false;\n        }, error: (err) => {\n          this.loading = false;\n        }\n      })\n    }\n  }\n\n  isNumberField(field: string) {\n    return this.numberFields.includes(field);\n  }\n\n  isDateField(field: string) {\n    return this.dateFields.includes(field);\n  }\n\n  isFieldExcluded(field: string) {\n    return this.excludeFields.includes(field);\n  }\n}\n","/*\n * Public API Surface of gridview\n */\n\nexport * from './lib/gridview.service';\nexport * from './lib/gridview.component';\n\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":"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"}